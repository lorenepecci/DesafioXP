{
  "openapi": "3.0.1",
  "info": {
    "description": "Este é um projeto do processo seletivo da XP ",
    "version": "1.0.0",
    "title": "Investimentos API",
    "contact": {
      "email": "lorenepecci@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "schemes": ["http"],
  "host": "localhost:3001",
  "basePath": "/",
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  },
  "paths": {
    "/clientes": {
      "post": {
        "summary": "Cadastrar Cliente",
        "description": "Fazer o castro de um novo cliente .",
        "tags": ["Clientes"],
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/cliente"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/definitions/clienteCriado"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro !",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": [
                    {
                      "message": "Este usuário já foi cadastrado."
                    },
                    {
                      "message": "Erro no corpo da requisição."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Logar o Cliente",
        "description": "Logar um cliente, para retornar seu token e codCliente. Após gerar o token, copie e cole na aba Authorize do canto direito desta página do swagger para poder desbloquear ações que precisam de autenticação",
        "tags": ["Login"],
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/definitions/token"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Erro !",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": [
                    {
                      "message": "Email ou senha inválida."
                    },
                    {
                      "message": "Erro no corpo da requisição."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ativos": {
      "get": {
        "summary": "Ver um Ativo da Corretora ou a Carteira de um Cliente",
        "description": "Buscar os ativos da Corretora por codAtivo ou buscar a Carteira do Cliente por codCliente. Atenção: o codCliente deve ser o mesmo que o codCliente logado.",
        "tags": ["Ativos"],
        "produces": ["application/json"],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "codAtivo",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "codCliente",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/definitions/ativo" },
                    { "$ref": "#/definitions/carteira" }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Erro !",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "message": "Ação nao permitida. Código do usuário incorreto."
                    },
                    {
                      "message": "Esse ativo não existe. "
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Erro !",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "message": "Não existe esta query para esta requisição."
                    },
                    {
                      "message": "Parâmetro deve ser um numero inteiro."
                    }
                  ]
                }
              }
            }
          }
        }
      },

      "post": {
        "summary": "Cadastrar um ativo na corretora",
        "description": "Cadastrar um novo ativo na Corretora. Atenção: o codCliente deve ser o mesmo que o codCliente logado.",
        "tags": ["Ativos"],
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/ativoBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/definitions/ativo"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro !",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "message": "Erro no corpo da requisição."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ativos/corretora": {
      "get": {
        "summary": "Ver Ativos da Corretora",
        "description": "Ver todos os ativos da Corretora",
        "tags": ["Ativos"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/definitions/ativosCorretora"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conta/deposito": {
      "post": {
        "summary": "Fazer um deposito",
        "description": "Fazer um deposito na conta Logada ou em outra conta existente.",
        "tags": ["Conta"],
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/depositoRetirada"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/definitions/depositoCriado"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro !",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "message": "Erro no corpo da requisição."
                    }
                  ]
                }
              }
            }
          },

          "400": {
            "description": "Erro !",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "message": "Você não tem saldo disponível. Seu saldo é de 999.99"
                    },
                    { "message": "Esse cliente não existe." }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/conta/saque": {
      "post": {
        "summary": "Fazer um saque",
        "description": "Fazer um saque na conta Logada. Atenção: o codCliente deve ser o mesmo que o codCliente logado.",
        "tags": ["Conta"],
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/depositoRetirada"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/definitions/retiradaCriada"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro !",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "message": "Erro no corpo da requisição."
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Erro!",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "message": "Ação nao permitida. Código do usuário incorreto."
                    },
                    { "message": "Conta inválida." },
                    {
                      "message": "Você não tem saldo disponível. Seu saldo é de 20.99"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/conta/{codCliente}": {
      "get": {
        "summary": "Ver Saldo",
        "description": "Ver saldo da conta Logada. Atenção: o codCliente deve ser o mesmo que o codCliente logado.",
        "tags": ["Conta"],
        "produces": ["application/json"],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "codCliente",
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/conta"
                }
              }
            }
          },

          "400": {
            "description": "Erro!",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "message": "Ação nao permitida. Código do usuário incorreto."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/conta/extrato": {
      "get": {
        "summary": "Ver extrato por período",
        "description": "Ver extrato da conta Logada por periodo desejado. Atenção: o codCliente deve ser o mesmo que o codCliente logado.",
        "tags": ["Conta"],
        "produces": ["application/json"],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "codCliente",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "inicio",
            "in": "query",
            "schema": {
              "type": "string",
              "$ref": "#/definitions/inicio"
            }
          },
          {
            "name": "fim",
            "in": "query",
            "schema": {
              "type": "string",
              "$ref": "#/definitions/fim"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/extrato"
                }
              }
            }
          },
          "500": {
            "description": "Erro!",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "message": "Campos incorretos ou faltantes. Os campos são codCliente, inicio e fim."
                    },
                    {
                      "message": "Parâmetro deve ser um numero inteiro. "
                    },
                    {
                      "message": "Parâmetro deve ter o formato aaaa-mm-dd "
                    }
                  ]
                }
              }
            }
          },

          "400": {
            "description": "Erro!",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "message": "Ação nao permitida. Código do usuário incorreto."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/investimentos/comprar": {
      "post": {
        "summary": "Criar compra de um Ativo",
        "description": "Criar compra - retorna dados compra. Atenção: o codCliente deve ser o mesmo que o codCliente logado.",
        "tags": ["Investimentos"],
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/compraVenda"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/definitions/compraCriada"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro!",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "message": "Ação nao permitida. Código do usuário incorreto."
                    },
                    {
                      "message": "Não há saldo disponível para esta compra."
                    },
                    {
                      "message": "Essa quantidade é maior que a quantidade disponível na corretora"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/investimentos/vender": {
      "post": {
        "summary": "Criar venda de um Ativo",
        "description": "Criar venda - retorna dados venda. Atenção: o codCliente deve ser o mesmo que o codCliente logado.",
        "tags": ["Investimentos"],
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/compraVenda"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/definitions/vendaCriada"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro!",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "message": "Ação nao permitida. Código do usuário incorreto."
                    },
                    {
                      "message": "Essa quantidade é maior que a quantidade disponível na carteira."
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Erro!",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "message": "Este Ativo não existe."
                    },
                    {
                      "message": "Esse item na carteira não existe."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/investimentos/relatorio": {
      "get": {
        "summary": "Relatorio de investimentos por periodo",
        "description": "Relatorio de investimentos por periodo. Atenção: o codCliente deve ser o mesmo que o codCliente logado. ",
        "tags": ["Investimentos"],
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "codCliente",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "inicio",
            "in": "query",
            "schema": {
              "type": "string",
              "$ref": "#/definitions/inicio"
            }
          },
          {
            "name": "fim",
            "in": "query",
            "schema": {
              "type": "string",
              "$ref": "#/definitions/fim"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/relatorio"
                }
              }
            }
          },
          "500": {
            "description": "Erro!",
            "content": {
              "application/json": {
                "schema": {
                  "example": [
                    {
                      "message": "Campos incorretos ou faltantes. Os campos são codCliente, inicio e fim."
                    },
                    {
                      "message": "Parâmetro deve ser um numero inteiro. "
                    },
                    {
                      "message": "Parâmetro deve ter o formato aaaa-mm-dd "
                    }
                  ]
                }
              }
            }
          },

          "400": {
            "description": "Erro!",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "message": "Ação nao permitida. Código do usuário incorreto."
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "cliente": {
      "type": "object",
      "required": ["email", "senha", "nome"],
      "properties": {
        "nome": {
          "type": "string"
        },
        "senha": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "example": {
        "nome": "fulano4",
        "senha": "42345678",
        "email": "fulano4@gmail.com"
      }
    },
    "clienteCriado": {
      "type": "object",
      "properties": {
        "codCliente": {
          "type": "number"
        },
        "nome": {
          "type": "string"
        },
        "senha": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "saldo": {
          "type": "number"
        }
      },
      "example": {
        "codCliente": 1,
        "nome": "fulano1",
        "senha": "$2a$08$486LWDJyZqEznxkr95SeHeczCck2/MBiAl2rWYoeBPmx1/Lj94idS",
        "email": "fulano1@gmail.com",
        "saldo": 0
      }
    },
    "login": {
      "type": "object",
      "required": ["email", "senha"],
      "properties": {
        "email": {
          "type": "string"
        },
        "senha": {
          "type": "string"
        }
      },
      "example": {
        "email": "fulano4@gmail.com",
        "senha": "42345678"
      }
    },
    "token": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "codCliente": "number"
        }
      },
      "example": {
        "type": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhVXNlciI6IntcImNvZENsaWVudGVcIjoyOSxcIm5vbWVcIjpcImZ1bGFubzRcIixcInNlbmhhXCI6XCIkMmEkMDgkL0x",
        "codCliente": 5
      }
    },
    "ativo": {
      "type": "object",
      "properties": {
        "codAtivo": {
          "type": "integer"
        },
        "qtdeAtivo": {
          "type": "integer"
        },
        "valorAtivo": {
          "type": "double"
        }
      },
      "example": {
        "codAtivo": 1,
        "qtdeAtivo": 14,
        "valorAtivo": 30.69
      }
    },
    "ativoBody": {
      "type": "object",
      "properties": {
        "qtdeAtivo": {
          "type": "integer"
        },
        "valorAtivo": {
          "type": "double"
        }
      },
      "example": {
        "qtdeAtivo": 60,
        "valorAtivo": 20.5
      }
    },
    "depositoRetirada": {
      "type": "object",
      "properties": {
        "codCliente": "integer",
        "valor": "decimal"
      },
      "example": {
        "codCliente": 1,
        "valor": 99.99
      }
    },
    "depositoCriado": {
      "type": "object",
      "properties": {
        "message": "string",
        "id": "integer",
        "codCliente": "integer",
        "valor": "string",
        "tipoDeposito": "boolean",
        "data": "string"
      },
      "example": {
        "message": "Depósito feito com sucesso.",
        "id": 13,
        "codCliente": 1,
        "valor": "99.98999999999999",
        "tipoDeposito": true,
        "data": "2022-07-20T18:08:54.203Z"
      }
    },
    "retiradaCriada": {
      "type": "object",
      "properties": {
        "message": "string",
        "id": "integer",
        "codCliente": "integer",
        "valor": "string",
        "tipoDeposito": "boolean",
        "data": "string"
      },
      "example": {
        "message": "Saque feito com sucesso.",
        "id": 14,
        "codCliente": 1,
        "valor": "99.98999999999999",
        "tipoDeposito": false,
        "data": "2022-07-20T18:19:01.745Z"
      }
    },
    "compraVenda": {
      "type": "object",
      "properties": {
        "codCliente": "integer",
        "codAtivo": "integer",
        "qtdeAtivo": "integer"
      },
      "example": {
        "codCliente": 1,
        "codAtivo": 2,
        "qtdeAtivo": 10
      }
    },
    "compraCriada": {
      "type": "object",
      "properties": {
        "message": "string",
        "id": "integer",
        "codCliente": "integer",
        "codAtivo": "integer",
        "qtdeAtivo": "integer",
        "valor": "string",
        "tipoCompra": "boolean",
        "data": "string"
      },
      "example": {
        "message": "Compra feita com sucesso.",
        "id": 9,
        "codCliente": 1,
        "codAtivo": 2,
        "qtdeAtivo": 10,
        "valor": "5.5",
        "tipoCompra": true,
        "data": "2022-07-20T18:27:43.305Z"
      }
    },
    "vendaCriada": {
      "type": "object",
      "properties": {
        "message": "string",
        "id": "integer",
        "codCliente": "integer",
        "codAtivo": "integer",
        "qtdeAtivo": "integer",
        "valor": "string",
        "tipoCompra": "boolean",
        "data": "string"
      },
      "example": {
        "message": "Venda feita com sucesso.",
        "id": 10,
        "codCliente": 1,
        "codAtivo": 2,
        "qtdeAtivo": 10,
        "valor": "5.5",
        "tipoCompra": false,
        "data": "2022-07-20T18:32:16.883Z"
      }
    },
    "conta": {
      "type": "object",
      "properties": {
        "codCliente": "integer",
        "saldo": "decimal"
      },
      "example": {
        "codCliente": 1,
        "saldo": 100.02
      }
    },
    "carteira": {
      "type": "array",
      "properties": [
        {
          "codCliente": "integer",
          "codAtivo": "integer",
          "qtdeAtivo": "integer",
          "valor": "decimal"
        }
      ],
      "example": [
        {
          "codCliente": 1,
          "codAtivo": 1,
          "qtdeAtivo": 2,
          "valor": 2.5
        }
      ]
    },
    "inicio": {
      "type": "string",
      "example": "2022-01-28"
    },
    "fim": {
      "type": "string",
      "example": "2023-01-28"
    },
    "extrato": {
      "type": "object",
      "example": {
        "entradas": 200.99,
        "saidas": 20.99
      }
    },
    "ativosCorretora": {
      "type": "array",
      "example": [
        {
          "codAtivo": 1,
          "qtdeAtivo": 14,
          "valorAtivo": 30.69
        },
        {
          "codAtivo": 2,
          "qtdeAtivo": 24,
          "valorAtivo": 38.69
        }
      ]
    },
    "relatorio": {
      "type": "array",
      "example": [
        {
          "codAtivo": 2,
          "total": 55,
          "tipoCompra": true,
          "data": "24/6/2022"
        },
        {
          "codAtivo": 2,
          "total": 55,
          "tipoCompra": true,
          "data": "24/6/2022"
        }
      ]
    }
  }
}
